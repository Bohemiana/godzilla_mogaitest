/*
 * Decompiled with CFR 0.153-SNAPSHOT (d6f6758-dirty).
 */
package org.fife.ui.rsyntaxtextarea.modes;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import javax.swing.text.Segment;
import org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker;
import org.fife.ui.rsyntaxtextarea.Token;
import org.fife.ui.rsyntaxtextarea.TokenImpl;

public class Assembler6502TokenMaker
extends AbstractJFlexTokenMaker {
    public static final int YYEOF = -1;
    public static final int EOL_COMMENT = 2;
    public static final int YYINITIAL = 0;
    private static final int[] ZZ_LEXSTATE = new int[]{0, 1, 2, 2};
    private static final String ZZ_CMAP_PACKED = "\t\u0000\u00013\u0001\r\u0001\u0000\u0001\u000e\u0013\u0000\u00013\u0001\u0011\u0001\n\u00012\u0001\u0004\u0001\u0007\u0001!\u0001\u000b\u0002)\u0001\u0010\u0001\u0010\u0001\t\u0001\u0010\u0001\u0012\u0001\u001e\u0002\b\b\u0003\u0001\u000f\u0001\f\u0001$\u0001(\u0001&\u0001)\u00011\u0001\u001c\u0001\u0013\u0001\u0005\u0001 \u0001\u001a\u0001+\u0001\u0001\u0001\u0006\u0001\u0014\u0001/\u0001\u001d\u0001\u0018\u0001\u001f\u0001\u0016\u0001\u0017\u0001*\u0001-\u0001#\u0001%\u0001\u0015\u00010\u0001.\u0001,\u0001\"\u0001\u0019\u0001\u0001\u0001\t\u0001\u0000\u0001\t\u0001\u001b\u0001\u0002\u0001\u0000\u0001\u001c\u0001\u0013\u0001\u0005\u0001 \u0001\u001a\u00015\u0001\u0001\u00014\u0001\u0014\u0001/\u0001\u001d\u0001\u0018\u0001\u001f\u0001\u0016\u0001\u0017\u0001*\u0001-\u0001#\u0001%\u0001\u0015\u00010\u0001.\u00016\u0001\"\u0001\u0019\u0001\u0001\u0001\u0000\u0001'\u0001\u0000\u0001\u0011\uff81\u0000";
    private static final char[] ZZ_CMAP = Assembler6502TokenMaker.zzUnpackCMap("\t\u0000\u00013\u0001\r\u0001\u0000\u0001\u000e\u0013\u0000\u00013\u0001\u0011\u0001\n\u00012\u0001\u0004\u0001\u0007\u0001!\u0001\u000b\u0002)\u0001\u0010\u0001\u0010\u0001\t\u0001\u0010\u0001\u0012\u0001\u001e\u0002\b\b\u0003\u0001\u000f\u0001\f\u0001$\u0001(\u0001&\u0001)\u00011\u0001\u001c\u0001\u0013\u0001\u0005\u0001 \u0001\u001a\u0001+\u0001\u0001\u0001\u0006\u0001\u0014\u0001/\u0001\u001d\u0001\u0018\u0001\u001f\u0001\u0016\u0001\u0017\u0001*\u0001-\u0001#\u0001%\u0001\u0015\u00010\u0001.\u0001,\u0001\"\u0001\u0019\u0001\u0001\u0001\t\u0001\u0000\u0001\t\u0001\u001b\u0001\u0002\u0001\u0000\u0001\u001c\u0001\u0013\u0001\u0005\u0001 \u0001\u001a\u00015\u0001\u0001\u00014\u0001\u0014\u0001/\u0001\u001d\u0001\u0018\u0001\u001f\u0001\u0016\u0001\u0017\u0001*\u0001-\u0001#\u0001%\u0001\u0015\u00010\u0001.\u00016\u0001\"\u0001\u0019\u0001\u0001\u0001\u0000\u0001'\u0001\u0000\u0001\u0011\uff81\u0000");
    private static final int[] ZZ_ACTION = Assembler6502TokenMaker.zzUnpackAction();
    private static final String ZZ_ACTION_PACKED_0 = "\u0003\u0000\u0002\u0001\u0001\u0002\u0003\u0001\u0001\u0003\u0001\u0004\u0001\u0005\u0001\u0006\u0001\u0007\u0001\b\n\u0001\u0001\b\u0001\u0001\u0001\b\u0001\u0001\u0002\b\u0006\u0001\u0002\t\u0001\n\u0005\t\u0001\u0001\u0001\u000b\u0002\u0002\u0003\u0001\u0001\u0002\u0001\f\u0001\r\n\u0000\u0011\u0001\u0001\u000e\u0006\u0001\u0001\u000e\u0007\u0001\u0003\u000b\u0001\u000e\u0004\t\u0004\u0000\u0005\u000f\u0001\b\u0003\u000f\u0003\u0001\u0001\u000b\u0004\t\u0004\u0000\u0003\u000f\u0001\u0001\u0001\u000b\u0003\t\u0001\u0010\u0002\u0000\u0004\u000f\u0001\u0001\u0001\t\u0002\u0000\u0001\u000f";
    private static final int[] ZZ_ROWMAP = Assembler6502TokenMaker.zzUnpackRowMap();
    private static final String ZZ_ROWMAP_PACKED_0 = "\u0000\u0000\u00007\u0000n\u0000\u00a5\u0000\u00dc\u0000\u0113\u0000\u014a\u0000\u0181\u0000\u01b8\u0000\u01ef\u0000\u0226\u0000\u00a5\u0000\u00a5\u0000\u025d\u0000\u00a5\u0000\u0294\u0000\u02cb\u0000\u0302\u0000\u0339\u0000\u0370\u0000\u03a7\u0000\u03de\u0000\u0415\u0000\u044c\u0000\u0483\u0000\u04ba\u0000\u04f1\u0000\u0528\u0000\u055f\u0000\u0596\u0000\u05cd\u0000\u0604\u0000\u063b\u0000\u0672\u0000\u06a9\u0000\u06e0\u0000\u0717\u0000\u074e\u0000\u0785\u0000\u00a5\u0000\u07bc\u0000\u07f3\u0000\u082a\u0000\u0861\u0000\u0898\u0000\u08cf\u0000\u08cf\u0000\u00dc\u0000\u014a\u0000\u0906\u0000\u093d\u0000\u0974\u0000\u01b8\u0000\u00a5\u0000\u00a5\u0000\u09ab\u0000\u09e2\u0000\u0a19\u0000\u0a50\u0000\u0a87\u0000\u0abe\u0000\u0af5\u0000\u0b2c\u0000\u0b63\u0000\u0b9a\u0000\u0bd1\u0000\u0c08\u0000\u0c3f\u0000\u0c76\u0000\u0cad\u0000\u0ce4\u0000\u0d1b\u0000\u0d52\u0000\u0d89\u0000\u0dc0\u0000\u0df7\u0000\u0e2e\u0000\u0e65\u0000\u0e9c\u0000\u0ed3\u0000\u0f0a\u0000\u0f41\u0000\u00dc\u0000\u0f78\u0000\u0faf\u0000\u0fe6\u0000\u101d\u0000\u1054\u0000\u108b\u0000\u063b\u0000\u10c2\u0000\u10f9\u0000\u1130\u0000\u1167\u0000\u119e\u0000\u11d5\u0000\u120c\u0000\u06a9\u0000\u1243\u0000\u127a\u0000\u12b1\u0000\u12e8\u0000\u131f\u0000\u1356\u0000\u138d\u0000\u13c4\u0000\u13fb\u0000\u1432\u0000\u1469\u0000\u09ab\u0000\u14a0\u0000\u14d7\u0000\u150e\u0000\u1545\u0000\u09ab\u0000\u157c\u0000\u0a87\u0000\u15b3\u0000\u15ea\u0000\u1621\u0000\u1658\u0000\u168f\u0000\u16c6\u0000\u16fd\u0000\u1734\u0000\u176b\u0000\u17a2\u0000\u17d9\u0000\u1810\u0000\u1847\u0000\u187e\u0000\u18b5\u0000\u18ec\u0000\u1923\u0000\u00a5\u0000\u195a\u0000\u1991\u0000\u19c8\u0000\u19ff\u0000\u1a36\u0000\u1a6d\u0000\u1aa4\u0000\u0a50\u0000\u0af5\u0000\u0b63\u0000\u1adb\u0000\u1b12\u0000\u19ff\u0000\u1b49\u0000\u1b80";
    private static final int[] ZZ_TRANS = Assembler6502TokenMaker.zzUnpackTrans();
    private static final String ZZ_TRANS_PACKED_0 = "\u0001\u0004\u0002\u0005\u0001\u0006\u0001\u0007\u0001\b\u0001\u0005\u0001\t\u0001\u0006\u0001\u0004\u0001\n\u0001\u000b\u0001\f\u0001\r\u0001\u000e\u0001\u0004\u0002\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0005\u0001\u0017\u0001\u000f\u0001\u0018\u0001\u0005\u0001\u000f\u0001\u0005\u0001\u0019\u0001\u001a\u0001\u0005\u0001\u001b\u0001\u001c\u0001\u001d\u0001\u001e\u0001\u001f\u0001\u000f\u0001\u0004\u0001 \u0001!\u0003\u0005\u0001\"\u0001\u0005\u0001#\u0001$\u0001\u000e\u0001\u0005\u0001!\u0001\u0005\u0001\u0004\u0002\u0005\u0001\u0006\u0001\u0007\u0001\b\u0001\u0005\u0001%\u0001\u0006\u0001\u0004\u0001\n\u0001\u000b\u0001\f\u0001\r\u0001\u000e\u0001\u0004\u0002\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0015\u0001\u0016\u0001\u0005\u0001\u0017\u0001\u000f\u0001\u0018\u0001\u0005\u0001\u000f\u0001\u0005\u0001\u0019\u0001\u001a\u0001\u0005\u0001\u001b\u0001\u001c\u0001\u001d\u0001\u001e\u0001\u001f\u0001\u000f\u0001\u0004\u0001 \u0001!\u0003\u0005\u0001\"\u0001\u0005\u0001#\u0001$\u0001\u000e\u0001\u0005\u0001!\u0001\u0005\u0006&\u0001'\u0006&\u0001(\u001d&\u0001)\u0001*\u0007&\u0001+\u0001,\u0001-7\u0000\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0002\u0005\u0001\u0006\u0001.\u0001!\u00010\u0001\u0000\u0001\u0006\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0006\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0003\u0000\u00011\u0001\u0000\u00011\u0002\u0000\u00011\n\u0000\u00011\u0006\u0000\u00011\u0001\u0000\u00011\u0003\u0000\u00011\n\u0000\u00011\t\u0000\u00011\u0001\u0000\u0001.\u0002\u0005\u0001!\u0001.\u0001!\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0004\u0005\u00012\u0001\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u00013\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u00014\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\b\u0000\u00015.\u0000\n\n\u00016,\n\u000b\u000b\u00017+\u000b\u000e\u0000\u0001\u000e$\u0000\u0001\u000e\u0004\u0000\u00038\u0001\u0000\u00018\u00019\u0001\u0000\u00018\n\u0000\u0001:\u00028\u0001;\u0001<\u0001=\u00028\u0001\u0000\u0001>\u00018\u0001\u0000\u0001?\u00018\u0001\u0000\u0001@\u00018\u0001\u0000\u0001A\u0004\u0000\u00078\u0003\u0000\u00019\u00028\u0001.\u0002\u0005\u0001!\u0001.\u0001B\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0001C\u0001\u0005\u0001D\u0003\u0005\u0001E\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001F\u0001!\u0001.\u0001\u0005\u0001G\u0001.\u0001\u0005\u0004.\u0001H\u0001!\u0002\u0005\u0001I\u0002\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0003\u0005\u0001J\u0004\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001K\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001\u0005\u0001L\u0004\u0005\u0001M\u0001N\u0001.\u00014\u0001\u0005\u0001\u0000\u0002\u0005\u0001.\u0001O\u0001\u0005\u0001.\u0001P\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0004\u0005\u00013\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001\u0005\u0001M\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0001Q\u0001\u0005\u0001\u0000\u0001\u0005\u0001R\u0001.\u0001\u0005\u0001S\u0001.\u0001T\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001!\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0003\u0005\u0001T\u0002\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001!\u0001\u0005\u0001U\u0003\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001!\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0002\u0005\u0001V\u0003\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001W\u0001.\u0001X\u0001T\u0001.\u0001H\u0004.\u0001\u0005\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001Y\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001Z\u0001\u0005\u0001S\u0004\u0005\u0001[\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001Z\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001Z\u0002S\u0002\u0005\u00013\u0002.\u0001\u0000\u00010\u0001Z\u0001S!\u0000\u0001\u000f\u0015\u0000\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0002\u0005\u0001\\\u0001\u0005\u0001]\u0001M\u0001\u0005\u0001^\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001\u0005\u0001M\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005$\u0000\u0001\u000f\u0001\u0000\u0001\u000f\u0001\u0000\u0001\u000f\u000e\u0000\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001K\u0001\u0005\u0001R\u0002\u0005\u0001_\u0001\u0005\u0001`\u0001.\u0001P\u0001\u0005\u0001\u0000\u0002\u0005\u0001.\u0001\u0005\u0001D\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005&\u0000\u0001\u000f\u0001\u0000\u0001\u000f5\u0000\u0001\u000f\u000f\u0000\u0001.\u0003\u0005\u0001.\u0001\u0005\u0001a\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0005\u0005\u0001a\u0002\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0001a\u0002\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001!\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0006\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u00013\u0001\u0005\u0001.\u0002\u0005\u0001.\u0001T\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001\u0000\u0002b\u0002\u0000\u0002b\f\u0000\bb\u0001\u0000\u0002b\u0001\u0000\u0002b\u0001\u0000\u0002b\u0001\u0000\u0001b\u0004\u0000\u0007b\u0003\u0000\u0003b\nc\u0001d(c\u0001\u0000\u0003c\u0001\u0000\u0002e\u0002\u0000\u0002e\u0001\u0000\u00015\n\u0000\be\u0001\u0000\u0002e\u0001\u0000\u0002e\u0001\u0000\u0002e\u0001\u0000\u0001e\u0004\u0000\u0007e\u0003\u0000\u0003e\r&\u0001\u0000&&\u0003\u0000\r&\u0001\u0000\u0007&\u0001f\u001e&\u0003\u0000\r&\u0001\u0000\u0006&\u0001g\u0001h\u001e&\u0003\u0000\r&\u0001\u0000\u001e&\u0001i\u0007&\u0002\u0000\u0001j\u0015\u0000\u0001k5\u0000\u0001l\u0001mM\u0000\u0001j\t\u0000\u0001j\u0007.\u0001\u0000\u0001.\u0001\u0000\u0003.\u0002\u0000\u0001.\u0001\u0000\u0001.\u0001\u0000\u000b.\u0001\u0000\u0014.\u0001\u0000\u0004.\u0003\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001\u0005\u0001S\u0006\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001S\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0004\u0005\u0001S\u0002\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001S\u0006\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0006\u0005\u0001S\u0001\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001S\u0001\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0007n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u000bn\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0001n\u0001o\tn\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0001n\u0001p\u0007n\u0001q\u0001n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0004n\u0001r\u0006n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u000bn\u0001\u0000\u0004n\u0001s\u000fn\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0004n\u0001o\u0006n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0001t\u0007n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0004n\u0001t\u0006n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0004n\u0001u\u0006n\u0001\u0000\u0014n\u0001\u0000\tn\u0001v\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u000bn\u0001\u0000\u0014n\u0001\u0000\u0001v\u0002n\u0001.\u0002\u0005\u0001!\u0001.\u0001Z\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0006\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001S\u0004.\u0001\u0005\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0002\u0005\u0001S\u0005\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0007\u0005\u0001S\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001!\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0006\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001!\u0001\u0005\u0001S\u0003\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001\u0005\u0001S\u0006\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0001\u0005\u0001S\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0005\u0005\u0001S\u0002\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001S\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0006\u0005\u0001S\u0001\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001S\u0001\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0001w\u0001\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001x\u0001\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001S\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001S\u0001\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001S\u0001\u0005\u0001.\u0001S\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0006\u0005\u0001S\u0001\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0002\u0005\u0001.\u0001S\u0001\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001\u0005\u0001S\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0006\u0005\u0001S\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001S\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001Z\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0006\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001S\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001!\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0006\u0005\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001S\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0002\u0005\u0001!\u0001.\u0001Z\u00010\u0001\u0000\u0001!\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001!\u0005\u0005\u0001S\u0001!\u0001.\u0001!\u0001\u0005\u0001\u0000\u0001\u0005\u0001!\u0001.\u0001S\u0001\u0005\u0001.\u0001\u0005\u0004.\u0001\u0005\u0001!\u0005\u0005\u0002.\u0001\u0000\u00010\u0001!\u0001\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001\u0005\u0001S\u0006\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001S\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0005\u0005\u0001S\u0002\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0001\u0005\u0001S\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001y\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0004\u0005\u0001S\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001\u0005\u0001S\u0006\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001S\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0001S\u0001\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0001S\u0006\u0005\u0002.\u0001\u0000\u0003\u00053c\u0001\u0000\u0003c\nd\u0001c(d\u0001z\u0003d\u0001\u0000\u0003e\u0001\u0000\u0002e\u0001\u0000\u0001e\n\u0000\be\u0001\u0000\u0002e\u0001\u0000\u0002e\u0001\u0000\u0002e\u0001\u0000\u0001e\u0004\u0000\u0007e\u0003\u0000\u0003e\r&\u0001\u0000\u0007&\u0001{\u001e&\u0003\u0000\r&\u0001\u0000\n&\u0001|\u001b&\u0003\u0000\r&\u0001\u0000\u001c&\u0001}\t&\u0003\u0000\r&\u0001\u0000\u001e&\u0001~\u0007&\u0002\u0000\u0001\u007f,\u0000\u0001\u007f\t\u0000\u0001\u007f\u0015\u0000\u0001\u00809\u0000\u0001\u0081H\u0000\u0001\u0082\f\u0000\u0007n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0001\u0083\nn\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0002n\u0001\u0084\bn\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0001\u0085\u0007n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0002n\u0001s\bn\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u000bn\u0001\u0000\u0001n\u0001s\u0012n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0005n\u0001s\u0005n\u0001\u0000\u0004n\u0001s\u000fn\u0001\u0000\u0003n\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0007\u0005\u0001X\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0002\u0005\u0001\u0086\u0005\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0001S\u0001\u0005\u0001S\u0005\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001S\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0002\u0005\u0002S\u0003\u0005\u0002.\u0001\u0000\u0002\u0005\u0001S\nz\u0001\u0087,z\r&\u0001\u0000\u001c&\u0001\u0088\t&\u0003\u0000\r&\u0001\u0000\f&\u0001}\u0019&\u0003\u0000\r&\u0001\u0000\u0001&\u0001\u0089$&\u0003\u0000\r&\u0001\u0000\u0004&\u0001\u008a!&\u0015\u0000\u0001\u008bN\u0000\u0001\u008c&\u0000\u0001\u0082+\u0000\u0001\u008d'\u0000\u0007n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0006n\u0001\u008e\u0004n\u0001\u0000\u0014n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0001\u008f\u0001u\u0004n\u0001\u0090\u0001n\u0001\u0000\u0003n\u0001\u0091\u0010n\u0001\u0000\nn\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\nn\u0001o\u0001\u0000\u0014n\u0001\u0000\u0003n\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\u0007\u0005\u0001\u0092\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0007\u0005\u0002.\u0001\u0000\u0003\u0005\r&\u0001\u0000\u0001&\u0001\u0089\u0015&\u0001}\u000e&\u0003\u0000\r&\u0001\u0000\u0010&\u0001\u0093\u0015&\u0003\u0000\u0001&\t\u008a\u0001&\u0002\u008a\u0001\u0000\u0001&\f\u008a\u0001&\b\u008a\u0001&\u0001\u008a\u0002&\u000b\u008a\u0001&\u0003\u008b\u0001\u0000\u0001\u008b\u0001\u0094\u0004\u008b\u0001\u0094\u0001\u008b\u0001\u0094\u0001\u0000\u0002\u0094\u0002\u0000\u0004\u0094\b\u008b\u0001\u0000\u0005\u008b\u0001\u0094\u0002\u008b\u0001\u0000\u0001\u008b\u0002\u0000\u0002\u0094\u0007\u008b\u0002\u0094\u0001\u0000\u0003\u008b\u000f\u0000\u0001\u008d\u0015\u0000\u0001\u0082/\u0000\u0001\u0095\u0018\u0000\u0007n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0002n\u0001\u0096\bn\u0001\u0000\u0014n\u0001\u0000\u0003n\u0001.\u0003\u0005\u0001.\u0002\u0005\u0001\u0000\u0001\u0005\u0001\u0000\u0003.\u0002\u0000\u0001/\u0001\u0000\u0001.\u0001\u0000\b\u0005\u0001.\u0002\u0005\u0001\u0000\u0002\u0005\u0001.\u0002\u0005\u0001.\u0001\u0005\u0004.\u0003\u0005\u0001U\u0003\u0005\u0002.\u0001\u0000\u0003\u0005\r&\u0001\u0000\u0010&\u0001\u008a\u0015&!\u0000\u0001\u008b\u0018\u0000\u0007n\u0001\u0000\u0001n\u0001\u0000\u0003n\u0002\u0000\u0001n\u0001\u0000\u0001n\u0001\u0000\u0007n\u0001s\u0003n\u0001\u0000\u0014n\u0001\u0000\u0003n";
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;
    private static final String[] ZZ_ERROR_MSG = new String[]{"Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large"};
    private static final int[] ZZ_ATTRIBUTE = Assembler6502TokenMaker.zzUnpackAttribute();
    private static final String ZZ_ATTRIBUTE_PACKED_0 = "\u0003\u0000\u0001\t\u0007\u0001\u0002\t\u0001\u0001\u0001\t\u0018\u0001\u0001\t\r\u0001\u0002\t\n\u0000(\u0001\u0004\u0000\u0011\u0001\u0004\u0000\u0004\u0001\u0001\t\u0004\u0001\u0002\u0000\u0006\u0001\u0002\u0000\u0001\u0001";
    private Reader zzReader;
    private int zzState;
    private int zzLexicalState = 0;
    private char[] zzBuffer;
    private int zzMarkedPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private boolean zzAtBOL = true;
    private boolean zzAtEOF;

    private static int[] zzUnpackAction() {
        int[] result = new int[150];
        int offset = 0;
        offset = Assembler6502TokenMaker.zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do {
                result[j++] = value;
            } while (--count > 0);
        }
        return j;
    }

    private static int[] zzUnpackRowMap() {
        int[] result = new int[150];
        int offset = 0;
        offset = Assembler6502TokenMaker.zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    private static int[] zzUnpackTrans() {
        int[] result = new int[7095];
        int offset = 0;
        offset = Assembler6502TokenMaker.zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do {
                result[j++] = --value;
            } while (--count > 0);
        }
        return j;
    }

    private static int[] zzUnpackAttribute() {
        int[] result = new int[150];
        int offset = 0;
        offset = Assembler6502TokenMaker.zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do {
                result[j++] = value;
            } while (--count > 0);
        }
        return j;
    }

    public Assembler6502TokenMaker() {
    }

    private void addHyperlinkToken(int start, int end, int tokenType) {
        int so = start + this.offsetShift;
        this.addToken(this.zzBuffer, start, end, tokenType, so, true);
    }

    private void addToken(int tokenType) {
        this.addToken(this.zzStartRead, this.zzMarkedPos - 1, tokenType);
    }

    private void addToken(int start, int end, int tokenType) {
        int so = start + this.offsetShift;
        this.addToken(this.zzBuffer, start, end, tokenType, so);
    }

    @Override
    public void addToken(char[] array, int start, int end, int tokenType, int startOffset) {
        super.addToken(array, start, end, tokenType, startOffset);
        this.zzStartRead = this.zzMarkedPos;
    }

    @Override
    public String[] getLineCommentStartAndEnd(int languageIndex) {
        return new String[]{";", null};
    }

    @Override
    public Token getTokenList(Segment text, int initialTokenType, int startOffset) {
        this.resetTokenList();
        this.offsetShift = -text.offset + startOffset;
        int state = 0;
        switch (initialTokenType) {
            default: 
        }
        state = 0;
        this.s = text;
        try {
            this.yyreset(this.zzReader);
            this.yybegin(state);
            return this.yylex();
        } catch (IOException ioe) {
            ioe.printStackTrace();
            return new TokenImpl();
        }
    }

    private boolean zzRefill() {
        return this.zzCurrentPos >= this.s.offset + this.s.count;
    }

    public final void yyreset(Reader reader) {
        this.zzBuffer = this.s.array;
        this.zzStartRead = this.s.offset;
        this.zzEndRead = this.zzStartRead + this.s.count - 1;
        this.zzCurrentPos = this.zzMarkedPos = this.s.offset;
        this.zzLexicalState = 0;
        this.zzReader = reader;
        this.zzAtBOL = true;
        this.zzAtEOF = false;
    }

    public Assembler6502TokenMaker(Reader in) {
        this.zzReader = in;
    }

    public Assembler6502TokenMaker(InputStream in) {
        this(new InputStreamReader(in));
    }

    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[65536];
        int i = 0;
        int j = 0;
        while (i < 186) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do {
                map[j++] = value;
            } while (--count > 0);
        }
        return map;
    }

    public final void yyclose() throws IOException {
        this.zzAtEOF = true;
        this.zzEndRead = this.zzStartRead;
        if (this.zzReader != null) {
            this.zzReader.close();
        }
    }

    public final int yystate() {
        return this.zzLexicalState;
    }

    @Override
    public final void yybegin(int newState) {
        this.zzLexicalState = newState;
    }

    public final String yytext() {
        return new String(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
    }

    public final char yycharat(int pos) {
        return this.zzBuffer[this.zzStartRead + pos];
    }

    public final int yylength() {
        return this.zzMarkedPos - this.zzStartRead;
    }

    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[0];
        }
        throw new Error(message);
    }

    public void yypushback(int number) {
        if (number > this.yylength()) {
            this.zzScanError(2);
        }
        this.zzMarkedPos -= number;
    }

    public Token yylex() throws IOException {
        int zzEndReadL = this.zzEndRead;
        char[] zzBufferL = this.zzBuffer;
        char[] zzCMapL = ZZ_CMAP;
        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;
        block43: while (true) {
            int zzInput;
            boolean eof;
            int zzMarkedPosL;
            if ((zzMarkedPosL = this.zzMarkedPos) > this.zzStartRead) {
                switch (zzBufferL[zzMarkedPosL - 1]) {
                    case '\n': 
                    case '\u000b': 
                    case '\f': 
                    case '\u0085': 
                    case '\u2028': 
                    case '\u2029': {
                        this.zzAtBOL = true;
                        break;
                    }
                    case '\r': {
                        if (zzMarkedPosL < zzEndReadL) {
                            this.zzAtBOL = zzBufferL[zzMarkedPosL] != '\n';
                            break;
                        }
                        if (this.zzAtEOF) {
                            this.zzAtBOL = false;
                            break;
                        }
                        eof = this.zzRefill();
                        zzMarkedPosL = this.zzMarkedPos;
                        zzEndReadL = this.zzEndRead;
                        zzBufferL = this.zzBuffer;
                        if (eof) {
                            this.zzAtBOL = false;
                            break;
                        }
                        this.zzAtBOL = zzBufferL[zzMarkedPosL] != '\n';
                        break;
                    }
                    default: {
                        this.zzAtBOL = false;
                    }
                }
            }
            int zzAction = -1;
            this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
            int zzCurrentPosL = this.zzStartRead;
            this.zzState = this.zzAtBOL ? ZZ_LEXSTATE[this.zzLexicalState + 1] : ZZ_LEXSTATE[this.zzLexicalState];
            while (true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = zzBufferL[zzCurrentPosL++];
                } else {
                    if (this.zzAtEOF) {
                        zzInput = -1;
                        break;
                    }
                    this.zzCurrentPos = zzCurrentPosL;
                    this.zzMarkedPos = zzMarkedPosL;
                    eof = this.zzRefill();
                    zzCurrentPosL = this.zzCurrentPos;
                    zzMarkedPosL = this.zzMarkedPos;
                    zzBufferL = this.zzBuffer;
                    zzEndReadL = this.zzEndRead;
                    if (eof) {
                        zzInput = -1;
                        break;
                    }
                    zzInput = zzBufferL[zzCurrentPosL++];
                }
                int zzNext = zzTransL[zzRowMapL[this.zzState] + zzCMapL[zzInput]];
                if (zzNext == -1) break;
                this.zzState = zzNext;
                int zzAttributes = zzAttrL[this.zzState];
                if ((zzAttributes & 1) != 1) continue;
                zzAction = this.zzState;
                zzMarkedPosL = zzCurrentPosL;
                if ((zzAttributes & 8) == 8) break;
            }
            this.zzMarkedPos = zzMarkedPosL;
            switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 1: {
                    this.addToken(20);
                }
                case 17: {
                    continue block43;
                }
                case 14: {
                    this.addToken(8);
                }
                case 18: {
                    continue block43;
                }
                case 12: {
                    this.addToken(13);
                }
                case 19: {
                    continue block43;
                }
                case 15: {
                    this.addToken(17);
                }
                case 20: {
                    continue block43;
                }
                case 7: {
                    this.addToken(21);
                }
                case 21: {
                    continue block43;
                }
                case 11: {
                    this.addToken(24);
                }
                case 22: {
                    continue block43;
                }
                case 16: {
                    int temp = this.zzStartRead;
                    this.addToken(this.start, this.zzStartRead - 1, 1);
                    this.addHyperlinkToken(temp, this.zzMarkedPos - 1, 1);
                    this.start = this.zzMarkedPos;
                }
                case 23: {
                    continue block43;
                }
                case 4: {
                    this.addToken(38);
                }
                case 24: {
                    continue block43;
                }
                case 5: {
                    this.start = this.zzMarkedPos - 1;
                    this.yybegin(2);
                }
                case 25: {
                    continue block43;
                }
                case 8: {
                    this.addToken(23);
                }
                case 26: {
                    continue block43;
                }
                case 2: {
                    this.addToken(10);
                }
                case 27: {
                    continue block43;
                }
                case 13: {
                    this.addToken(14);
                }
                case 28: {
                    continue block43;
                }
                case 3: {
                    this.addToken(37);
                    this.addNullToken();
                    return this.firstToken;
                }
                case 29: {
                    continue block43;
                }
                case 6: {
                    this.addNullToken();
                    return this.firstToken;
                }
                case 30: {
                    continue block43;
                }
                case 10: {
                    this.addToken(this.start, this.zzStartRead - 1, 1);
                    this.addNullToken();
                    return this.firstToken;
                }
                case 31: {
                    continue block43;
                }
                case 9: 
                case 32: {
                    continue block43;
                }
            }
            if (zzInput == -1 && this.zzStartRead == this.zzCurrentPos) {
                this.zzAtEOF = true;
                switch (this.zzLexicalState) {
                    case 2: {
                        this.addToken(this.start, this.zzStartRead - 1, 1);
                        this.addNullToken();
                        return this.firstToken;
                    }
                    case 151: {
                        continue block43;
                    }
                    case 0: {
                        this.addNullToken();
                        return this.firstToken;
                    }
                    case 152: {
                        continue block43;
                    }
                }
                return null;
            }
            this.zzScanError(1);
        }
    }
}

